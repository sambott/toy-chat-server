# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="changeme"
play.crypto.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Application loader class
# ~~~~~
play.application.loader="AppLoader"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
slick.dbs.default.driver = "slick.driver.MySQLDriver$"
slick.dbs.default.db.driver = "com.mysql.jdbc.Driver"
slick.dbs.default.db.url = "jdbc:mysql://192.168.99.100:32775/chat?useSSL=false"
slick.dbs.default.db.url = ${?MYSQL_CONNECTION}
slick.dbs.default.db.user = "root"
slick.dbs.default.db.user = ${?MYSQL_USERNAME}
slick.dbs.default.db.password = "password"
slick.dbs.default.db.password = ${?MYSQL_PASSWORD}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled
# play.evolutions.autoApplyDowns=false

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
}

clustered {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "localhost"
        port = 2551
      }
    }

    cluster {
      seed-nodes = ["akka.tcp://clustered@127.0.0.1:2551"]
      auto-down-unreachable-after = 10s
    }
  }
}

# cors filter conf
play.filters {
  cors {
    # The path prefixes to filter.
    pathPrefixes = ["/"]
    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null
    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = null
    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = null
    # The exposed headers
    exposedHeaders = []
    # Whether to support credentials
    supportsCredentials = true
    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 1 hour
  }
}
